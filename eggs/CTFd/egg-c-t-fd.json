{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1"
    },
    "exported_at": "2019-06-20T11:41:01+02:00",
    "name": "CTFd",
    "author": "gaspardrenaud@hotmail.com",
    "description": "CTFd is a Capture The Flag framework focusing on ease of use and customizability.\r\n\r\nCTFd comes with most of the features needed by an event organizer to run a competition or workshop. In addition, if CTFd\u2019s feature set is insufficient, CTFd allows for the usage of plugins and themes to control almost every aspect of how it looks and behaves.\r\n\r\nCTFd is used by many different clubs, universities, and companies to host their own Capture The Flags.\r\n\r\nWhile available as open source, CTFd developers also provide a managed hosting service available at https:\/\/ctfd.io\/.\r\n\r\nCTFd is written in Python and makes use of the Flask web framework.",
    "image": "renaud11232\/pterodactyl:ctfd",
    "startup": "gunicorn -k gevent -b 0.0.0.0:{{BIND_PORT}} \"CTFd:create_app()\"",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Loaded module, <module 'CTFd.plugins.flags'\",\r\n    \"userInteraction\": []\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\napt update -y\r\napt install -y git\r\n\r\ngit clone https:\/\/github.com\/CTFd\/CTFd.git \/mnt\/server",
            "container": "ubuntu:bionic",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Bind Port",
            "description": "The port to listen on",
            "env_variable": "BIND_PORT",
            "default_value": "8000",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "required|integer|min:1|max:65535"
        },
        {
            "name": "Reverse Proxy",
            "description": "Specifies whether CTFd is behind a reverse proxy or not. Set to True if using a reverse proxy like nginx.\r\nYou can also specify a comma seperated set of numbers specifying the reverse proxy configuration settings. For example to configure x_for=1, x_proto=1, x_host=1, x_port=1, x_prefix=1 specify 1,1,1,1,1. By setting the value to True, CTFd will default to the above behavior with all proxy settings set to 1.",
            "env_variable": "REVERSE_PROXY",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "string|nullable"
        },
        {
            "name": "Database URL",
            "description": "The URI that specifies the username, password, hostname, port, and database of the server used to hold the CTFd database.\r\n\r\ne.g. mysql+pymysql:\/\/root:<YOUR_PASSWORD_HERE>@localhost\/ctfd",
            "env_variable": "DATABASE_URL",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "string|nullable"
        },
        {
            "name": "Secret Key",
            "description": "The secret value used to creation sessions and sign strings. This should be set to a random string. In the interest of ease, CTFd will automatically create a secret key file for you. If you wish to add this secret key to your instance you should hard code this value to a random static value.\r\n\r\nYou can also remove .ctfd_secret_key from the .gitignore file and commit this file into whatever repository you are using.",
            "env_variable": "SECRET_KEY",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "string|nullable"
        },
        {
            "name": "Redis URL",
            "description": "The URI to connect to a Redis server.\r\n\r\ne.g. redis:\/\/user:password@localhost:6379",
            "env_variable": "REDIS_URL",
            "default_value": "",
            "user_viewable": 1,
            "user_editable": 1,
            "rules": "string|nullable"
        }
    ]
}